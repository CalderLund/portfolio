{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","url","target","Component","About","src","alt","aboutme","email","phone","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","achievement","class","work","CompanyName","MonthOfLeaving","YearOfLeaving","Porfolio","portfolio","uri","rel","imgurl","description","techstack","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2a2cf34.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n              <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n              <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n              <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n              <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/calder.png\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n                  <div className=\"columns contact-details\">\n                     <h2>Contact Details</h2>\n                     <p className=\"address\">\n                        <span>Name: {resumeData.name}</span>\n                        <br/>\n                        <span>\n                           Email: <a href={\"mailto:\"+resumeData.email}>{resumeData.email}</a>\n                        </span>\n                        <br/>\n                        <span>\n                           Phone: {resumeData.phone}\n                        </span>\n                     </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1><span>Education</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.education && resumeData.education.map((item)=>{\n                return(\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                      {item.specialization}\n                      <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                      {\n                        item.Achievements.map((achievement) => {\n                          return(\n                            <li class=\"li-class\">{achievement}</li>\n                          )\n                        })\n                      }\n                      <br/>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Work</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return(\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                      {item.specialization}\n                      <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                      {\n                        item.Achievements.map((achievement) => {\n                          return(\n                            <li class=\"li-class\">{achievement}</li>\n                          )\n                        })\n                      }\n                      <br/>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div> \n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Here are some of my projects.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <a href={item.uri} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <div className=\"item-wrap\">\n                    <img src={`${item.imgurl}`} className=\"item-img\"/>\n                    <div className=\"overlay\">\n                      <div className=\"portfolio-item-meta\">\n                        <h5>{item.name}</h5>\n                        <p>{item.description}<br/><br/>{item.techstack}</p>\n                      </div>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"http://calderlund.github.io/portfolio/\",\n    \"name\": \"Calder Lund\",\n    \"role\": \"4th year student at the University of Waterloo majoring in Computer Science, with a minor in Combinatorics and Optimization and a Business Specialization\",\n    \"roleDescription\": \"\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/calder-lund-874381156/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/CalderLund\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"youtube\",\n          \"url\":\"https://www.youtube.com/user/TheBurntLemons\",\n          \"className\":\"fa fa-youtube\"\n        }\n      ],\n    \"aboutme\":\"I am a competitive hockey player, musician/composer, award-winning film creator and computer scientist. I have worked on a variety of projects that include infrastructure engineering, machine learning, website design, software security, computer networks and much more. Outside of my professional life, I spend most of my time playing basketball, writing music or improving my slightly above mediocre chess skills.\",\n    \"email\":\"cjlund@uwaterloo.ca\",\n    \"phone\":\"(647)-994-5990\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of Waterloo\",\n        \"specialization\":\"Bachelors of Computer Science\",\n        \"MonthOfPassing\":\"Expected April\",\n        \"YearOfPassing\":\"2022\",\n        \"Achievements\":[\n          \"GPA of 3.6/4.0\",\n          \"Minor in Combinatorics and Optimization\",\n          \"Business Option\"\n        ]\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Wish (ContextLogic Inc.)\",\n        \"specialization\":\"Infrastructure Security Engineer\",\n        \"MonthOfLeaving\":\"May 2020 - Aug 2021\",\n        \"YearOfLeaving\":\"\",\n        \"Achievements\":[\n          \"Secured AWS subnet communication across all accounts by building automated NACL tooling using HashiCorp Terraform and Python\",\n          \"Wrote and deployed HashiCorp Vault client management tools using Golang and Python to store secrets securely\",\n          \"Created authentication/authorization tools for MongoDB clients to allow for improved metrics and control over user/service access rights\",\n          \"Automated Kubernetes deployments using JSONNET\",\n          \"Built secure repository to authenticate Dex, Vault and AWS clients\"\n        ]\n      },\n      {\n        \"CompanyName\":\"BlackBerry Limited\",\n        \"specialization\":\"Software Security Developer\",\n        \"MonthOfLeaving\":\"Sep 2019 - Dec 2019\",\n        \"YearOfLeaving\":\"\",\n        \"Achievements\":[\n          \"Designed and implemented a patent-pending machine learning algorithm for action recognition in the automotive field\",\n          \"Developed production-level cybersecurity software for Android and iOS devices using C++\",\n          \"Built testing framework for team to allow for easy unit testing allowing for long-term sustainability of code\",\n          \"Found and fixed critical bugs before major release date ensuring product met product requirements\",\n          \"Worked in fast-paced Agile environment on scrum team\"\n        ]\n      },\n      {\n        \"CompanyName\":\"DaganTech (formerly AgriLogicAI)\",\n        \"specialization\":\"Machine Learning Product Developer\",\n        \"MonthOfLeaving\":\"Jan 2019 - Apr 2019\",\n        \"YearOfLeaving\":\"\",\n        \"Achievements\":[\n          \"Solved problems in agriculture using computer vision, time-series analysis and other machine learning techniques\",\n          \"Designed a FCN-LSTM capable of predicting a farm’s crop growth allowing for easy anomaly detection\",\n          \"Performed data analysis using Python, Jupyter Notebooks and R\"\n        ]\n      },\n      {\n        \"CompanyName\":\"CIBC Capital Markets\",\n        \"specialization\":\"Software Developer\",\n        \"MonthOfLeaving\":\"May 2018 - Aug 2018\",\n        \"YearOfLeaving\":\"\",\n        \"Achievements\":[\n          \"Created hedging solutions in finance space using supervised learning and technical indicators\",\n          \"Prototyped and designed end to end application that provides statistical analysis tools for traders\",\n          \"Worked on trade-floor side-by-side with liability traders\"\n        ]\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"UWPath\",\n        \"description\":\"Web application designed to help UWaterloo students plan their courses properly, following their majors, minors and options.\",\n        \"techstack\":\"Python, Vue.js, Django, Docker, Kubernetes, Bash, AWS, CircleCi, PostgreSQL\",\n        \"imgurl\":\"images/UWPath.png\",\n        \"uri\":\"https://uwpath.live\"\n      },\n      {\n        \"name\":\"Covid19 Case Predictor\",\n        \"description\":\"Apache Spark based Machine Learning model designed to predict Novel Coronavirus cases in Canada using historical tweets from Twitter.\",\n        \"techstack\":\"Apache Spark, Scala, Machine Learning, Big Data\",\n        \"imgurl\":\"images/corona.jpg\",\n        \"uri\":\"https://github.com/CalderLund/COVID19Predictor\"\n      },\n      {\n        \"name\":\"BBall Analytics\",\n        \"description\":\"Web application that allows a user to examine basketball statistics over the last 100 years.\",\n        \"techstack\":\"Python, Django, SQL, Kaggle Datasets\",\n        \"imgurl\":\"images/bball.jpg\",\n        \"uri\":\"https://github.com/CalderLund/BBall-Analytics\"\n      },\n      {\n        \"name\":\"Chess Variant Maker\",\n        \"description\":\"Abstract library designed to allow for many chess variants to be created.\",\n        \"techstack\":\"Python, Object-oriented code\",\n        \"imgurl\":\"images/chess.jpg\",\n        \"uri\":\"https://github.com/CalderLund/ChessVariantMaker\"\n      },\n      {\n        \"name\":\"C-- Compiler (school)\",\n        \"description\":\"Built and optimized a simplified C-based programming compilers.\",\n        \"techstack\":\"C++, 32-bit MIPS assembler\",\n        \"imgurl\":\"images/compiler.jpeg\",\n        \"uri\":\"https://github.com/CalderLund/C---Compiler\"\n      },\n      {\n        \"name\":\"OS-161 (school)\",\n        \"description\":\"Fixed broken OS to make it functional and optimized\",\n        \"techstack\":\"C, Synchronization, Concurrency, System Calls, Multi-programming, Virtual Memory, Kernels\",\n        \"imgurl\":\"images/os.jpeg\",\n        \"uri\":\"https://github.com/CalderLund/CS350\"\n      },\n      {\n        \"name\":\"Multiplayer Tetris Variant (school)\",\n        \"description\":\"Multiplayer variant of Tetris which allows for many power ups and additional features not found in normal Tetris.\",\n        \"techstack\":\"C++, Object-oriented programming, UML design\",\n        \"imgurl\":\"images/tetris.jpeg\",\n        \"uri\":\"https://github.com/CalderLund/Multiplayer-Tetris-Variant\"\n      },\n      {\n        \"name\":\"Portfolio\",\n        \"description\":\"This portfolio you are viewing right now\",\n        \"techstack\":\"Javascript, React\",\n        \"imgurl\":\"images/portfolio.jpg\",\n        \"uri\":\"http://calderlund.github.io/portfolio\"\n      },\n    ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}